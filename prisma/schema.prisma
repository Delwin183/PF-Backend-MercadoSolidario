// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema_

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Ong {
  id                String          @id @default(auto()) @map("_id") @db.ObjectId
  name              String 
  lastName          String
  phone             String
  country           String?
  province          String?
  amountEmployee    String?
  ongName           String?
  address           String?
  cuit              String
  isActive          Boolean         @default(false)
  email             String
  password          String
  rut               String
  rubro             rubros[]
  type_of_user      type_of_user
  posts             Post[]
  reviews           Review[] 
}

model Post {
  id                String          @id @default(auto()) @map("_id") @db.ObjectId
  authorId          String          @db.ObjectId
  author            Ong             @relation(fields: [authorId], references: [id])
  date              DateTime?       @default(now())
  expirationDate    String
  updateDate        DateTime?       @default(now())
  title             String
  description       String?
  location          String
  image             String?
  resultsAchieved   String?
  isActive          Boolean         @default(true)
  confirmed         Confirmed[]
  rubro             rubros[]
  type_of_help      type_of_help
}

model Confirmed {
  id                String          @id @default(auto()) @map("_id") @db.ObjectId
  userIDs           String          @db.ObjectId
  users             User            @relation(fields: [userIDs], references: [id])
  postIDs           String          @db.ObjectId
  posts             Post            @relation(fields: [postIDs], references: [id])
  dateConfirmed     DateTime        @default(now())
  type_of_help      type_of_help
}

model User {
  id                String          @id @default(auto()) @map("_id") @db.ObjectId
  name              String
  lastName          String
  phone             String
  cuil              String? 
  user_linkedin     String?
  birthDate         DateTime? 
  profession        profession
  province          String?
  email             String
  password          String
  image             String?
  type_of_user      type_of_user
  type_of_insignia  insignia
  isActive          Boolean         @default(true)
  confirmed         Confirmed[]
  reviews           Review[]
  chats             Chatbot[]
}

model Company {
  id                String          @id @default(auto()) @map("_id") @db.ObjectId
  name              String
  lastName          String
  phone             String? 
  country           String?
  province          String?
  amountEmployee    String?
  companyName       String?
  cuit              String
  address           String?
  email             String
  password          String
  rut               String
  type_of_user      type_of_user
  isActive          Boolean         @default(false)
  reviews           Review[]
}

model Review {
  id                String          @id @default(auto()) @map("_id") @db.ObjectId
  comment           String
  dateReview        DateTime        @default(now())
  userIDs           String?          @db.ObjectId
  users             User?            @relation(fields: [userIDs], references: [id])
  ongIDs            String?          @db.ObjectId
  ongs              Ong?             @relation(fields: [ongIDs], references: [id])
  companyIDs        String?          @db.ObjectId
  companies         Company?         @relation(fields: [companyIDs], references: [id])
  isActive          Boolean         @default(true)
  puntuacion        String
}

model Chatbot {
  id                String          @id @default(auto()) @map("_id") @db.ObjectId
  userIDs           String          @db.ObjectId
  users             User            @relation(fields: [userIDs], references: [id])
  email             String
  question          String
  answer            Boolean
}

enum type_of_help {
  efectivo
  especie
  servicio
}

enum type_of_user {
  admin
  ong
  company
  user
}

enum rubros {
  Alimentacion
  Asesoria_legal
  Ayuda_a_refugiados
  Ayuda_a_animales
  Apoyo_a_comunidades_indigenas
  Apoyo_a_lgbt
  Apoyo_a_la_mujer
  Construccion_obras
  Cultura
  Deportes
  Derechos_humanos
  Discapacitados
  Educacion
  Medio_ambiente
  Entretenimiento
  Gobierno_no_lucro
  Materia_prima
  Medios_de_comunicacion
  Salud_medicina
  Servicio_comunitario
  Transporte
  Otros
}

enum insignia {
  participacion
  servicio
  especie
  dinero
  // servicio_bronce
  // servicio_plata
  // servicio_oro
  // especie_bronce
  // especie_plata
  // especie_oro
  // dinero_bronce
  // dinero_plata
  // dinero_oro
}

enum profession {
  Medico
  Ingeniero
  Profesor
  Abogado
  Contador
  Enfermero
  Arquitecto
  Economista
  Dentista
  Veterinario
  Psicologo
  Farmaceutico
  Cirujano
  Optometrista
  Fisioterapeuta
  TerapeutaDelHabla
  TrabajadorSocial
  Policia
  Bombero
  Militar
  Otros
}



//contacto.mercadosolidario@gmail.com
