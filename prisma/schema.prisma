// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema_

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Ong {
  id                String @id @default(auto()) @map("_id") @db.ObjectId
  name              String 
  lastName          String
  phone             String
  country           String?
  province          String?
  amountEmployee    String?
  ongName           String?
  ongCUIT           String
  isActive          Boolean @default(true)
  email             String
  password          String
  rut               String
  type_of_user      type_of_user
  posts             Post[] 
}

model Post {
  id                String @id @default(auto()) @map("_id") @db.ObjectId
  authorId          String @db.ObjectId
  author            Ong   @relation(fields: [authorId], references: [id])
  date              DateTime? @default(now())
  expirationDate    String
  updateDate        DateTime? @default(now())
  title             String
  description       String?
  location          String
  image             String?
  resultsAchieved   String?
  isActive          Boolean @default(true)
  confirmed         Confirmed[]
  type_of_help      type_of_help
}

model Confirmed {
  id                String @id @default(auto()) @map("_id") @db.ObjectId
  userIDs           String @db.ObjectId
  users             Users @relation(fields: [userIDs], references: [id])
  postIDs           String @db.ObjectId
  posts             Post @relation(fields: [postIDs], references: [id])
  dateConfirmed     DateTime @default(now())
  type_of_help      type_of_help
}

model Users {
  id                String @id @default(auto()) @map("_id") @db.ObjectId
  name              String
  lastName          String
  cuil              String 
  user_linkedin     String?
  birthDate         DateTime? 
  profession        String?
  email             String
  password          String
  isActive          Boolean @default(true)
  type_of_user      type_of_user
  confirmed         Confirmed[]
}

model Companies {
  id                String @id @default(auto()) @map("_id") @db.ObjectId
  name              String 
  lastName          String
  phone             String? 
  country           String?
  amountEmployee    String?
  companyName       String?
  companyCUIT       String
  email             String
  password          String
  rut               String
  type_of_user      type_of_user
  isActive          Boolean @default(true)
}

enum type_of_help {
  efectivo
  especie
  servicio
}

enum type_of_user {
  admin
  ong
  company
  user
}

//